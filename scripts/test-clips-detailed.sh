#!/bin/bash

echo "üé¨ TESTE DETALHADO: GERA√á√ÉO DE CLIPS"
echo "===================================="

# Configura√ß√µes
SUPABASE_URL="http://127.0.0.1:54321"
SUPABASE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0"

# Login
echo "üîê Fazendo login..."
LOGIN_RESPONSE=$(curl -s -X POST "${SUPABASE_URL}/auth/v1/token?grant_type=password" \
  -H "apikey: ${SUPABASE_KEY}" \
  -H "Content-Type: application/json" \
  -d '{"email": "test@example.com", "password": "123456"}')

ACCESS_TOKEN=$(echo $LOGIN_RESPONSE | jq -r '.access_token // empty')
USER_ID=$(echo $LOGIN_RESPONSE | jq -r '.user.id // empty')

if [ -z "$ACCESS_TOKEN" ]; then
  echo "‚ùå Erro no login"
  exit 1
fi

echo "‚úÖ Login OK - User ID: $USER_ID"

# Criar v√≠deo completo para teste
echo ""
echo "üìπ Criando v√≠deo de teste completo..."

TIMESTAMP=$(date +%s)
PUBLIC_ID="test-clips-detailed-${TIMESTAMP}"

CREATE_VIDEO_RESPONSE=$(curl -s -X POST "${SUPABASE_URL}/rest/v1/videos" \
  -H "Authorization: Bearer ${ACCESS_TOKEN}" \
  -H "apikey: ${SUPABASE_KEY}" \
  -H "Content-Type: application/json" \
  -H "Prefer: return=representation" \
  -d "{
    \"user_id\": \"${USER_ID}\",
    \"title\": \"V√≠deo Teste Clips Detalhado\",
    \"original_filename\": \"test-detailed.mp4\",
    \"file_size_bytes\": 2000000,
    \"duration_seconds\": 120,
    \"processing_status\": \"generating_clips\",
    \"cloudinary_public_id\": \"${PUBLIC_ID}\",
    \"cloudinary_secure_url\": \"https://res.cloudinary.com/demo/video/upload/v1234567890/sample.mp4\",
    \"transcription\": {
      \"text\": \"Este √© um v√≠deo sobre estrat√©gias de crescimento nas redes sociais. Vou compartilhar dicas importantes sobre engajamento, timing e cria√ß√£o de conte√∫do viral.\",
      \"segments\": [
        {\"start\": 0, \"end\": 30, \"text\": \"Este √© um v√≠deo sobre estrat√©gias de crescimento nas redes sociais.\"},
        {\"start\": 30, \"end\": 60, \"text\": \"Vou compartilhar dicas importantes sobre engajamento.\"},
        {\"start\": 60, \"end\": 90, \"text\": \"Tamb√©m falaremos sobre timing e cria√ß√£o de conte√∫do.\"},
        {\"start\": 90, \"end\": 120, \"text\": \"Por fim, estrat√©gias para conte√∫do viral.\"}
      ]
    }
  }")

VIDEO_ID=$(echo $CREATE_VIDEO_RESPONSE | jq -r '.[0].id // empty')

if [ -z "$VIDEO_ID" ]; then
  echo "‚ùå Erro ao criar v√≠deo"
  echo $CREATE_VIDEO_RESPONSE | jq .
  exit 1
fi

echo "‚úÖ V√≠deo criado - ID: $VIDEO_ID"

# Criar an√°lise de conte√∫do com clips
echo ""
echo "üîç Criando an√°lise de conte√∫do..."

ANALYSIS_DATA='{
  "video_id": "'$VIDEO_ID'",
  "user_id": "'$USER_ID'",
  "clips_suggestions": [
    {
      "start_time": 0,
      "end_time": 30,
      "title": "üî• Estrat√©gias de Crescimento",
      "viral_score": 85,
      "hook_strength": 90,
      "hashtags": ["#crescimento", "#redessociais", "#dicas"],
      "reason": "Introdu√ß√£o forte com promessa de valor",
      "topic": "educativo",
      "emotions": ["curiosidade", "interesse"],
      "best_platforms": ["TikTok", "Instagram"],
      "content_category": "educativo"
    },
    {
      "start_time": 30,
      "end_time": 60,
      "title": "üí° Segredos do Engajamento",
      "viral_score": 92,
      "hook_strength": 88,
      "hashtags": ["#engajamento", "#segredos", "#viral"],
      "reason": "Conte√∫do espec√≠fico sobre engajamento",
      "topic": "educativo",
      "emotions": ["surpresa", "motiva√ß√£o"],
      "best_platforms": ["TikTok", "YouTube"],
      "content_category": "educativo"
    },
    {
      "start_time": 60,
      "end_time": 90,
      "title": "‚è∞ Timing Perfeito Para Postar",
      "viral_score": 78,
      "hook_strength": 82,
      "hashtags": ["#timing", "#quando", "#postar"],
      "reason": "Informa√ß√£o pr√°tica e √∫til",
      "topic": "educativo",
      "emotions": ["interesse", "aprendizado"],
      "best_platforms": ["Instagram", "YouTube"],
      "content_category": "educativo"
    }
  ],
  "analysis_completed": true
}'

CREATE_ANALYSIS_RESPONSE=$(curl -s -X POST "${SUPABASE_URL}/rest/v1/content_analysis" \
  -H "Authorization: Bearer ${ACCESS_TOKEN}" \
  -H "apikey: ${SUPABASE_KEY}" \
  -H "Content-Type: application/json" \
  -H "Prefer: return=representation" \
  -d "$ANALYSIS_DATA")

echo "üìä An√°lise criada:"
echo $CREATE_ANALYSIS_RESPONSE | jq .

# Testar gera√ß√£o de clips
echo ""
echo "üé¨ Testando gera√ß√£o de clips..."

CLIPS_RESPONSE=$(curl -s -X POST "${SUPABASE_URL}/functions/v1/generate-clips" \
  -H "Authorization: Bearer ${ACCESS_TOKEN}" \
  -H "apikey: ${SUPABASE_KEY}" \
  -H "Content-Type: application/json" \
  -d "{
    \"video_id\": \"${VIDEO_ID}\"
  }")

echo "üì§ Resposta completa da gera√ß√£o:"
echo $CLIPS_RESPONSE | jq .

SUCCESS=$(echo $CLIPS_RESPONSE | jq -r '.success // false')
if [ "$SUCCESS" = "true" ]; then
  echo "‚úÖ Fun√ß√£o executou com sucesso!"
  
  CLIPS_GENERATED=$(echo $CLIPS_RESPONSE | jq -r '.clips_generated // 0')
  echo "üìä Clips gerados: $CLIPS_GENERATED"
  
  if [ "$CLIPS_GENERATED" -gt 0 ]; then
    echo "üé¨ Detalhes dos clips:"
    echo $CLIPS_RESPONSE | jq -r '.clips[] | "‚Ä¢ " + .title + " (ID: " + .id + ") - Status: " + .status'
  fi
else
  echo "‚ùå Erro na gera√ß√£o de clips"
  ERROR=$(echo $CLIPS_RESPONSE | jq -r '.error // "Erro desconhecido"')
  echo "üìã Erro: $ERROR"
  
  # Mostrar debug se dispon√≠vel
  DEBUG=$(echo $CLIPS_RESPONSE | jq -r '.debug // empty')
  if [ ! -z "$DEBUG" ]; then
    echo "üêõ Debug info:"
    echo $DEBUG | jq .
  fi
fi

# Verificar clips no banco
echo ""
echo "üîç Verificando clips no banco de dados..."

DB_CLIPS=$(curl -s "${SUPABASE_URL}/rest/v1/clips?video_id=eq.${VIDEO_ID}&select=*" \
  -H "Authorization: Bearer ${ACCESS_TOKEN}" \
  -H "apikey: ${SUPABASE_KEY}")

CLIPS_COUNT_DB=$(echo $DB_CLIPS | jq 'length')
echo "üìä Clips encontrados no banco: $CLIPS_COUNT_DB"

if [ "$CLIPS_COUNT_DB" -gt 0 ]; then
  echo "üé¨ Lista de clips no banco:"
  echo $DB_CLIPS | jq -r '.[] | "‚Ä¢ " + .title + " (" + (.start_time_seconds|tostring) + "s-" + (.end_time_seconds|tostring) + "s) - Status: " + .status + " - Score: " + (.ai_viral_score|tostring)'
else
  echo "‚ö†Ô∏è Nenhum clip encontrado no banco"
fi

# Verificar logs das edge functions
echo ""
echo "üìã Verificando logs das edge functions..."
echo "(Execute 'supabase functions logs generate-clips' para ver logs detalhados)"

echo ""
echo "üéâ TESTE DETALHADO CONCLU√çDO" 